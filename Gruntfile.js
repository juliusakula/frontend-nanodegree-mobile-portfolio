module.exports = function(grunt) {
  grunt.initConfig({
      jshint: {
          files: ['Gruntfile.js', 'src/**/*.js']
      },
      imagemin: {
          dist: {
              options: {
                  optimizationLevel: 3,
                  jpegoptim: true

              },
              files: [{
                  expand: true,
                  cwd: 'src/images/',
                  src: ['*.{png,gif}'],
                  dest: 'dist/'
              }]
          }
      },
      copy: {
          main: {
          cwd: 'src/',
          expand: true,
          src: ['**'],
          dest: 'dist/'
          }
      },
      chmod: {
          dist: {
              options: { mode: '777' },
              src: ['dist/', 'dist/images/']
          }
      },
      clean: {
          /*    Warning! A destructive task.
           *  Why bother? so that I'm sure dist/ is full of files only generated by the last call to 'grunt'
           *  This has the desired effect of deleting things in src/ directory, and letting grunt
           *  simultaneously delete it from dist/. Grunt is a build tool and when you look at a build, you want
           *  to know that the build contains no residue from previous builds, to ensure success when deploying the project elsewhere.
           */
          main: ['dist']
      },
      uglify: {
          main: {
              options: {
                  sourceMap: true,
                  mangle: false
              },
              files: {
                  'dist/js/main.min.js': ['src/js/main.js']
              }
          }
      }
    }
  );
  
  grunt.loadNpmTasks('grunt-contrib-copy');
  grunt.loadNpmTasks('grunt-contrib-jshint');
  grunt.loadNpmTasks('grunt-contrib-clean');
  grunt.loadNpmTasks('grunt-chmod');
  grunt.loadNpmTasks('grunt-contrib-imagemin');
  grunt.loadNpmTasks('grunt-contrib-uglify');

  grunt.registerTask('default', ['clean:main', 'copy', 'chmod', 'imagemin', 'uglify:main']);

};